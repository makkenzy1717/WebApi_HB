                            ТЕСТОВОЕ ЗАДАНИЕ ДЛЯ BACKEND
1.	Необходимо развернуть локально PostgreSql и создать базу данных TEST 
1.	создать таблицу R_CURRENCY с применением EF CodeFirst (структура таблицы описана ниже)
	Необходимо создать web api на .Net Core, который будет по запросу забирать данные из публичного API национального банка и сохранять данные в БД TEST
 .	сервис должен слушать порт указанный в appsettings.json
a.	подключение (Connection String) к БД необходимо хранить в appsettings.json
b.	в сервисе должны быть реализованы 2 GET метода
1 метод API .../currency/save/{date}  принимает параметр date
параметр date необходимо передать в API нац. банка, пример https://nationalbank.kz/rss/get_rates.cfm?fdate=30.03.2023 
Пример структуры XML с необходимыми полями
<rates>
	...
	<date>15.03.2019</date>
	<item>
		<fullname>АВСТРАЛИЙСКИЙ ДОЛЛАР</fullname>
		<title>AUD</title>
		<description>267.39</description>
		...
	</item>
	<item>
		<fullname>АЗЕРБАЙДЖАНСКИЙ МАНАТ</fullname>
		<title>AZN</title>
		<description>223.27</description>
		...
	</item>
	и далее все item’ы
</rates>

После того, как необходимые данные будут получены, их необходимо сохранить в таблицу R_CURRENCY, где A_DATE равна параметру date из XML
Успешным ответом данного метода является JSON объект с полем count, в котором указывается кол-во внесенных в таблицу записей
Неуспешный ответ данного метода придумать самим
2 метод API .../currency/{date}/{*code} принимает два параметра date и code, где code является не обязательным параметром
В методе необходимо выполнить запрос в БД b сделать выборку из таблицы R_CURRENCY по полям A_Date, Code
Успешным ответом данного метода является массив данных в формате JSON
Неуспешный ответ данного метода придумать самим
Структура таблицы R_CURRENCY
•	ID – int                                 [PK, автоинкремент]
•	TITLE  –  varchar(60)          [описание – наименование валюты]
•	CODE  –  varchar(3)           [описание – код валюты]
•	VALUE  –  numeric(18,2)  [описание – значение] 
•	A_DATE  –  date                 [описание – на дату выгрузки]
Все поля таблицы должны запрещать вставку NULL значения

Исходный код выложить на github
По завершению задания, необходимо описать методы API и работу сервиса и также приложить к исходникам
